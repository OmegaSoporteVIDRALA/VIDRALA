<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="Salesforce-Apex-Strict"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 
                             http://pmd.sourceforge.net/ruleset_2_0_0.xsd"
         xmlns:fn="http://www.w3.org/2005/xpath-functions">

    <description>
        Custom PMD rule set for Salesforce Apex classes to align with Salesforce best practices and internal validation.
    </description>

    <!-- 🔒 Seguridad: Evita logs y hardcoded IDs -->
    <rule ref="category/apex/security.xml/ApexCRUDViolation" />
    <rule ref="category/apex/security.xml/ApexCSRF" />
    <rule ref="category/apex/security.xml/ApexInsecureEndpoint" />
    <rule ref="category/apex/security.xml/ApexOpenRedirect" />
    <rule ref="category/apex/security.xml/ApexSOQLInjection" />
    <rule ref="category/apex/security.xml/ApexXSSFromURLParam" />

    <!-- 🚀 Performance: Evita consultas SOQL/Mixed DML en lugares prohibidos -->
    <rule ref="category/apex/performance.xml/AvoidDmlStatementsInLoops" />
    <rule ref="category/apex/performance.xml/AvoidSoqlInLoops" />
    <rule ref="category/apex/performance.xml/AvoidSoslInLoops" />
    <rule ref="category/apex/performance.xml/ApexCPUTimeLimit" />

     <!-- 🏗️ Buen diseño y estructura -->
    <rule ref="category/apex/design.xml/ClassNamingConventions" />
    <rule ref="category/apex/design.xml/ExcessiveClassLength" />
    <rule ref="category/apex/design.xml/ExcessiveMethodLength" />
    <rule ref="category/apex/design.xml/CognitiveComplexity" />
    <rule ref="category/apex/design.xml/EmptyCatchBlock" />
    <rule ref="category/apex/design.xml/LooseCatching" />
    <rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts" />

    <!-- 🔤 Nomenclatura (nombres claros y coherentes) -->
    <rule ref="category/apex/codestyle.xml/FieldNamingConventions" />
    <rule ref="category/apex/codestyle.xml/MethodNamingConventions" />
    <rule ref="category/apex/codestyle.xml/VariableNamingConventions" />
    <rule ref="category/apex/codestyle.xml/ApexUnitTestClassShouldHaveAsserts" />
    <rule ref="category/apex/codestyle.xml/TestMethodsMustBeInTestClasses" />

        <!-- ✅ Mejores prácticas generales -->
    <rule ref="category/apex/bestpractices.xml/AvoidHardcodingId" />
    <rule ref="category/apex/bestpractices.xml/AvoidWithSharingInTestClasses" />
    <rule ref="category/apex/bestpractices.xml/AvoidLogicInTriggers" />
    <rule ref="category/apex/bestpractices.xml/ProperExceptionHandling" />
    <rule ref="category/apex/bestpractices.xml/UseIsTestAnnotation" />

</ruleset>
